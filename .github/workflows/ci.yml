name: CI

on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request: { }

jobs:

  set_default_python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Sets the Python version
        run: echo "DEFAULT_PYTHON=${DEFAULT_PYTHON}" >> $GITHUB_ENV

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup
        with:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          python-version: '3.12'

      - name: Run mypy
        run: poetry run mypy cpvt_database_models


  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          python-version: '3.12'

      - name: Run lint
        run: poetry run ruff check cpvt_database_models


  test:
    name: test ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    needs:
      - lint
      - mypy
    strategy:
      matrix:
        python-version: [ '3.10', '3.11', '3.12' ]
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          python-version: ${{ matrix.python-version }}

      - name: Run pytest
        run: poetry run pytest --junitxml=report.xml --color=yes --cov=cpvt_database_models --cov-append --cov-report=term-missing -n auto


  test-build:
    name: test if project can be built
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          python-version: '3.12'

      - name: Build the app
        run: poetry build



  # https://github.com/marketplace/actions/alls-green
  check: # This job does nothing and is only used for the branch protection

    if: always()

    outputs:
      result: ${{ steps.all-green.outputs.result }}

    needs:
      - lint
      - test
      - test-build

    runs-on: ubuntu-latest

    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        id: all-green
        with:
          jobs: ${{ toJSON(needs) }}

  release-gitlab:
    needs: [ check ]
    if: needs.check.outputs.result == 'success' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          python-version: '3.12'

      - name: Build the app
        run: poetry build

      - name: Publish to GitLab
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: ${{ secrets.GITLAB_USER }}
          password: ${{ secrets.GITLAB_CI_TOKEN }}
          repository-url: 'https://gitlab.com/api/v4/projects/${{ secrets.GITLAB_PROJECT_ID }}/packages/pypi'


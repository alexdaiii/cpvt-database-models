"""schema_0.2.0

Revision ID: 96d9f616720a
Revises: 734e7cc14399
Create Date: 2024-07-02 16:26:09.982530

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "96d9f616720a"
down_revision: Union[str, None] = "734e7cc14399"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute(
        """
    ALTER TABLE publication
        DROP CONSTRAINT ck_publication_row_not_null;
    """
    )

    op.execute(
        """
    alter table publication
    add constraint ck_publication_row_not_null
        check (NOT ((title IS NULL) AND (first_author IS NULL) AND (reference IS NULL) AND
                    (year IS NULL) AND (doi IS NULL)));
    """
    )

    op.execute(
        """
        ALTER TABLE publication
        DROP CONSTRAINT ck_publication_publication_doi_regex;
        """
    )

    op.execute(
        f"""
        ALTER TABLE publication
        ADD CONSTRAINT publication_doi_regex CHECK (doi IS NULL OR (doi ~ 
        '{r'^10.\d{4,9}\/[-._;()\/:\w]+$'}'));
        """
    )

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "publication_database",
        sa.Column("database_id", sa.Integer(), nullable=False),
        sa.Column("name", postgresql.CITEXT(), nullable=False),
        sa.Column("origin_url", postgresql.CITEXT(), nullable=False),
        sa.Column("resource_uri", postgresql.CITEXT(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("database_id", name=op.f("pk_publication_database")),
        sa.UniqueConstraint("name", name=op.f("uq_publication_database_name")),
        sa.UniqueConstraint(
            "origin_url", name=op.f("uq_publication_database_origin_url")
        ),
        sa.UniqueConstraint(
            "resource_uri", name=op.f("uq_publication_database_resource_uri")
        ),
    )
    op.create_table(
        "publication_to_database",
        sa.Column("publication_id", sa.Integer(), nullable=False),
        sa.Column("database_id", sa.Integer(), nullable=False),
        sa.Column("resource_id", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["database_id"],
            ["publication_database.database_id"],
            name=op.f("fk_publication_to_database_database_id_publication_database"),
        ),
        sa.ForeignKeyConstraint(
            ["publication_id"],
            ["publication.publication_id"],
            name=op.f("fk_publication_to_database_publication_id_publication"),
        ),
        sa.PrimaryKeyConstraint(
            "publication_id",
            "database_id",
            name=op.f("pk_publication_to_database"),
        ),
        sa.UniqueConstraint(
            "resource_id",
            "database_id",
            name="uq_publication_to_database_resource_id_unique_per_database",
        ),
    )
    op.create_index(
        op.f("ix_publication_to_database_database_id"),
        "publication_to_database",
        ["database_id"],
        unique=False,
    )
    op.drop_constraint("uq_publication_pmid", "publication", type_="unique")
    op.drop_column("publication", "pmid")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "publication",
        sa.Column("pmid", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.create_unique_constraint("uq_publication_pmid", "publication", ["pmid"])
    op.drop_index(
        op.f("ix_publication_to_database_database_id"),
        table_name="publication_to_database",
    )
    op.drop_table("publication_to_database")
    op.drop_table("publication_database")
    # ### end Alembic commands ###

    op.execute(
        """
        ALTER TABLE publication
        DROP CONSTRAINT ck_publication_row_not_null;
        """
    )

    op.execute(
        """
    alter table publication
    add constraint ck_publication_row_not_null
        check (NOT ((title IS NULL) AND (first_author IS NULL) AND (pmid IS NULL) AND (reference IS NULL) AND
                    (year IS NULL) AND (doi IS NULL)));
    """
    )
